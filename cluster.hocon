actions {
  http {
    nestjs_smmi_get_all_WH_D {
      connector = nestjs_smmi_get_all_WH_D
      enable = true
      parameters {
        headers {
          accept = "application/json"
          cache-control = no-cache
          connection = keep-alive
          content-type = "application/json"
          keep-alive = "timeout=5"
        }
        max_retries = 2
        method = post
      }
      resource_opts {
        health_check_interval = 15s
        inflight_window = 100
        max_buffer_bytes = 256MB
        query_mode = async
        request_ttl = 45s
        worker_pool_size = 16
      }
    }
  }
}
connectors {
  http {
    nestjs_smmi_get_all_WH_D {
      connect_timeout = 15s
      enable = true
      enable_pipelining = 100
      headers {content-type = "application/json"}
      pool_size = 8
      pool_type = random
      resource_opts {
        health_check_interval = 15s
        start_after_created = true
        start_timeout = 5s
      }
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = 5s
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_none
        versions = [tlsv1.3, tlsv1.2]
      }
      url = "http://192.168.1.68:3000/api/sensores"
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = 10s
  rules {
    nestjs_smmi_get_all_WH_D {
      actions = ["http:nestjs_smmi_get_all_WH_D"]
      description = ""
      enable = true
      metadata {created_at = 1713520418813}
      name = ""
      sql = "SELECT\n  *\nFROM\n  \"SMMI/Sensores/#\""
    }
  }
}
topic_metrics = [
  {topic = "mqttx/cli"},
  {topic = "SMMI/Habitacion1/tempCorp"}
]
