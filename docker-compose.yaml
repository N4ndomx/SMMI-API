version: '3.1'
services:
  db:
    image: postgres:11
    restart: always
    networks:
      - app_net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    container_name: ${DATABASE_NAME}_container
    volumes:
      - ./postgres:/var/lib/postgresql/data

  emqx1:
    image: emqx:5.4.0
    #restart: always
    container_name: emqx-smmi
    environment:
      - "EMQX_NAME=emqx1"
    healthcheck:
      test: [ "CMD", "/opt/emqx/bin/emqx", "ctl", "status" ]
      interval: 5s
      timeout: 25s
      retries: 5
    ports:
      - 1883:1883 # MQTT/TCP Protocol Port
      - 8083:8083 #MQTT/WS Protocol Port
      #- 8084:8084 # MQTT/WSS Protocol Port
      #- 8883:8883 # MQTT/SSL Protocol Port
      - 18083:18083 # Dasboart
      #- 8081:8081 # API Rest
    volumes:
      - ./emqx1_data:/opt/emqx/data
    networks:
      - app_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: n4ndomx/apismmired:latest
    container_name: api-rest
    restart: always
    ports:
      - "3000:3000"
    networks:
      - app_net
    depends_on:
      - db
  # emulador:
  #   image: n4ndomx/smmisensor:dev
  #   container_name: emulador-smmi
  #   ports:
  #     - "8081:48080"
  #   networks:
  #     - app_net
  #   depends_on:
  #     - backend

networks:
  app_net:
    driver: bridge
